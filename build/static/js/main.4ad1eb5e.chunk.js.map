{"version":3,"sources":["component/friendlist/FriendList.js","component/header/Header.js","component/users/Users.js","App.js","reportWebVitals.js","index.js"],"names":["FriendList","props","count","user","length","total","reduce","income","className","map","first_name","Header","type","placeholder","Users","users","src","image","alt","last_name","ip_address","email","onClick","handleUser","icon","faPlus","App","useState","setUser","newUser","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gnlBAiBeA,EAfI,SAACC,GAChB,IAAIC,EAAQD,EAAME,KAAKC,OACnBC,EAAQJ,EAAME,KAAKG,QAAQ,SAACD,EAAMF,GAAP,OAAcE,EAAMF,EAAKI,SAAQ,GAChE,OACI,sBAAKC,UAAU,UAAf,UACI,sBAAKA,UAAU,OAAf,UACI,yCACA,6BAAKP,EAAME,KAAKM,KAAI,SAAAN,GAAI,OAAE,oCAAOA,EAAKO,sBAE1C,gDAAmBR,KACnB,yDAA4BG,SCKzBM,G,MAfA,WACX,OACI,qBAAKH,UAAU,MAAf,SACG,qBAAIA,UAAU,WAAd,UACI,oBAAIA,UAAU,OAAd,kBACA,oBAAIA,UAAU,OAAd,qBACA,oBAAIA,UAAU,OAAd,8BACA,oBAAIA,UAAU,OAAd,qBACA,oBAAIA,UAAU,OAAd,SAAqB,uBAAOI,KAAK,OAAOC,YAAY,oB,eCYpDC,G,MAjBD,SAACb,GACX,IAAME,EAAOF,EAAMc,MAEnB,OACI,sBAAKP,UAAU,eAAf,UACF,qBAAKQ,IAAKb,EAAKc,MAAOC,IAAI,KAC1B,6BAAKf,EAAKO,WAAa,IAAKP,EAAKgB,YACjC,4CAAehB,EAAKiB,cACpB,0CAAajB,EAAKI,UAClB,yCAAaJ,EAAKkB,SAClB,yBAAQb,UAAU,MAAMc,QAAU,kBAAIrB,EAAMsB,WAAWpB,IAAvD,cAA+D,cAAC,IAAD,CAAiBqB,KAAMC,MAAtF,sB,QCgBSC,MAvBf,WAAgB,IAAD,EACOC,mBAAS,IADhB,mBACTxB,EADS,KACJyB,EADI,KAERL,EAAY,SAACM,GACjBD,EAAQ,GAAD,mBAAKzB,GAAL,CAAU0B,MAGlB,OADDC,QAAQC,IAAI5B,GAET,sBAAKK,UAAU,GAAf,UACA,cAAC,EAAD,IACH,sBAAKA,UAAU,YAAf,UACA,qBAAKA,UAAW,OAAhB,SAEKO,EAAMN,KAAI,SAAAN,GAAI,OAAE,cAAC,EAAD,CAAOY,MAAQZ,EAAMoB,WAAYA,SAIlD,cAAC,EAAD,CAAYpB,KAAQA,WCZV6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4ad1eb5e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './friendlist.css'\r\nconst FriendList = (props) => {\r\n    let count = props.user.length;\r\n    let total = props.user.reduce(((total,user)=>total+user.income),0)\r\n    return (\r\n        <div className='friends'>\r\n            <div className=\"each\">\r\n                <h4>Friends</h4>\r\n                <h4>{props.user.map(user=><li>  {user.first_name}</li>)}</h4>\r\n            </div>\r\n            <h3>Friend count :{count}</h3>\r\n            <h4>Total friends income : {total}</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport './header.css'\r\nconst Header = () => {\r\n    return (\r\n        <div className='nav'>\r\n           <ul className='nav-item'>\r\n               <li className=\"item\">Home</li>\r\n               <li className=\"item\">Contact</li>\r\n               <li className=\"item\">User Information</li>\r\n               <li className=\"item\"> About </li>\r\n               <li className=\"item\"><input type=\"text\" placeholder='search'/></li>\r\n           </ul>\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport './users.css';\r\n\r\nconst Users = (props) => {\r\n    const user = props.users;\r\n    \r\n    return (\r\n        <div className=\"user-profile\">\r\n      <img src={user.image} alt=\"\"/>\r\n      <h3>{user.first_name + ' '+ user.last_name}</h3>\r\n      <h5> Address :{user.ip_address}</h5>  \r\n      <h4>income :{user.income}</h4>\r\n      <h5>Email :{ user.email}</h5>\r\n      <button className=\"btn\" onClick ={()=>props.handleUser(user)}> <FontAwesomeIcon icon={faPlus} /> Add Friend</button>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import { useEffect, useState } from 'react';\nimport './App.css';\n\nimport FriendList from './component/friendlist/FriendList';\nimport Header from './component/header/Header';\nimport Users from './component/users/Users';\nimport users from './data/data.json'\n\nfunction App() {\n let [user,setUser] = useState([])\n const handleUser= (newUser)=>{\n   setUser([...user,newUser])\n }\n console.log(user)\n  return (\n    <div className=\"\">\n    <Header></Header>\n <div className=\"container\">\n <div className= 'user'>\n      {\n      users.map(user=><Users users ={user} handleUser={handleUser}></Users>)\n    } \n   \n    </div>\n     <FriendList user = {user}></FriendList>\n\n </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}